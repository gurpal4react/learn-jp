{"version":3,"file":"static/js/688.c001e784.chunk.js","mappings":"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","sources":["components/hooks/useVocabularyList.js","Pages/VocabularyList.js","Services/list.js","components/hooks/useList.js","helper/speak.js","components/UI/EmptyPage.js","components/hooks/useCarousel.js","components/UI/Carousel.js","components/UI/List.js","components/hooks/useScrollTopBtn.js","components/UI/ScrollTopBtn.js","data/app/LessonStart.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport listService from \"../../Services/list\";\r\n\r\nconst useVocabularyList = (level) => {\r\n  const [data, setData] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const chapterRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const data = await listService.getVocabulary(level);\r\n        setData(data.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n  }, [level]);\r\n  return { data, loading, chapterRef };\r\n};\r\n\r\nexport default useVocabularyList;\r\n","import React from \"react\";\r\nimport ListComponent from \"../components/UI/List\";\r\nimport useVocabularyList from \"../components/hooks/useVocabularyList\";\r\nimport Loader from \"../components/UI/Loader\";\r\nimport { lessonStart } from \"../data/app/LessonStart\";\r\n\r\nconst VocabularyList = ({ level }) => {\r\n  const { data, loading, chapterRef } = useVocabularyList(level);\r\n  return loading || !data ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      <div>\r\n        <h1 className=\"list-heading\">List of Vocabulary</h1>\r\n        <h3 className=\"list-heading\">Go to Chapter</h3>\r\n        {Array.from(\r\n          { length: 25 },\r\n          (_, index) => index + lessonStart[level]\r\n        )?.map((chapter) => {\r\n          return (\r\n            <button\r\n              key={chapter}\r\n              className=\"chapter-button\"\r\n              onClick={() =>\r\n                window.scrollTo({\r\n                  top: chapterRef.current[chapter].offsetTop,\r\n                  behavior: \"smooth\",\r\n                })\r\n              }\r\n            >\r\n              {chapter}\r\n            </button>\r\n          );\r\n        })}\r\n        {Object.keys(data)?.map((chapter, chapter_no) => {\r\n          return (\r\n            <div\r\n              key={chapter_no}\r\n              className=\"list\"\r\n              ref={(el) => (chapterRef.current[chapter] = el)}\r\n            >\r\n              <ListComponent\r\n                dataValues={data[chapter]}\r\n                heading={`Chapter ${chapter}`}\r\n                mainKey=\"jp\"\r\n                noShowKeys={[\"lesson\", \"type\"]}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VocabularyList;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"list/\";\r\n\r\n// Letters\r\nconst hiraganaUrl = baseUrl + \"hiragana\";\r\nconst katakanaUrl = baseUrl + \"katakana\";\r\nconst katakanaReadingUrl = baseUrl + \"katakana-reading\";\r\n\r\n// Grammar\r\nconst adverbUrl = baseUrl + \"adverbs\";\r\nconst eAdjectiveUrl = baseUrl + \"e-adjective\";\r\nconst naAdjectiveUrl = baseUrl + \"na-adjective\";\r\nconst particleUrl = baseUrl + \"particles\";\r\n\r\n// Vocabulary\r\nconst vocabularyUrl = baseUrl + \"vocabulary\";\r\n\r\n// Kanji\r\nconst kanjiUrl = baseUrl + \"kanji\";\r\n\r\n// Common\r\nconst timeUrl = baseUrl + \"common/time\";\r\nconst countingUrl = baseUrl + \"common/counting\";\r\nconst directionsUrl = baseUrl + \"common/directions\";\r\n\r\n// Letters\r\nconst listService = {\r\n  getHiragana: async () => {\r\n    try {\r\n      const data = await axios.get(hiraganaUrl);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getKatakana: async () => {\r\n    try {\r\n      const data = await axios.get(katakanaUrl);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getKatakanaReading: async () => {\r\n    try {\r\n      const data = await axios.get(katakanaReadingUrl);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Grammar\r\n  getAdverbs: async (level) => {\r\n    try {\r\n      let url = adverbUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getEAdjective: async (level) => {\r\n    try {\r\n      let url = eAdjectiveUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getNaAdjective: async (level) => {\r\n    try {\r\n      let url = naAdjectiveUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getParticles: async (level) => {\r\n    try {\r\n      let url = particleUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Vocabulary\r\n  getVocabulary: async (level, lesson) => {\r\n    try {\r\n      let url = vocabularyUrl;\r\n      if (level) {\r\n        url += `?level=${level}`;\r\n        if (lesson) url += `&lesson=${lesson}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Kanji\r\n  getKanji: async (level) => {\r\n    try {\r\n      let url = kanjiUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Common\r\n  getTime: async (level) => {\r\n    try {\r\n      let url = timeUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getCounting: async (level) => {\r\n    try {\r\n      let url = countingUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getDirections: async (level) => {\r\n    try {\r\n      let url = directionsUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n};\r\n\r\nexport default listService;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useList = (dataService, level, mainKey, noShowKeys, dataValues) => {\r\n  const [keys, setKeys] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [typedData, setTypedData] = useState(null);\r\n  const [index, setIndex] = useState(undefined);\r\n  const [currentType, setCurrentType] = useState(undefined);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleCarousel = (num, type) => {\r\n    setIndex(num);\r\n    if (type) {\r\n      setCurrentType(type);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataValues) {\r\n      setData(dataValues);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (!dataService) return;\r\n    const getData = async () => {\r\n      try {\r\n        const data = await dataService(level);\r\n        setData(data.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n  }, [dataService, level, dataValues]);\r\n\r\n  useEffect(() => {\r\n    if (!data || !data.length) return;\r\n    setKeys(\r\n      Object.keys(data[0]).filter(\r\n        (key) =>\r\n          key !== mainKey &&\r\n          !(Array.isArray(noShowKeys) && noShowKeys.indexOf(key) !== -1)\r\n      )\r\n    );\r\n    if (Object.keys(data[0]).indexOf(\"type\") !== -1) {\r\n      const hash = data.reduce(\r\n        // eslint-disable-next-line\r\n        (p, c) => (p[c.type] ? p[c.type].push(c) : (p[c.type] = [c]), p),\r\n        {}\r\n      );\r\n      setTypedData(Object.keys(hash).map((k) => ({ type: k, data: hash[k] })));\r\n    }\r\n  }, [data, mainKey, noShowKeys]);\r\n\r\n  return {\r\n    data,\r\n    keys,\r\n    typedData,\r\n    loading,\r\n    index,\r\n    setIndex,\r\n    currentType,\r\n    handleCarousel,\r\n  };\r\n};\r\n\r\nexport default useList;\r\n","export const speak = (text) => {\r\n  const utterance = new SpeechSynthesisUtterance(text);\r\n  utterance.lang = \"ja-JP\"; // Set the language to Japanese\r\n\r\n  // Fetch available voices and filter for Japanese voices\r\n  let voices = window.speechSynthesis.getVoices();\r\n  const japaneseVoices = voices.filter((voice) => voice.lang === \"ja-JP\");\r\n\r\n  // Set a Japanese voice if available\r\n  if (japaneseVoices.length > 0) {\r\n    utterance.voice = japaneseVoices[0]; // Using the first Japanese voice available\r\n  }\r\n\r\n  // Optional: Adjust pitch and rate for more natural sounding speech\r\n  utterance.pitch = 1.2; // Slightly higher pitch\r\n  utterance.rate = 0.9; // Slightly slower rate to mimic natural speaking pace\r\n\r\n  window.speechSynthesis.speak(utterance);\r\n};\r\n","import React from 'react'\r\n\r\nconst EmptyPage = () => {\r\n  return (\r\n    <div className='error-page'>\r\n      No Data to show\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmptyPage\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useCarousel = (data, initialIndex, setInitialIndex, initialType) => {\r\n  const [totalLength, setTotalLength] = useState();\r\n  const [typeList, setTypeList] = useState();\r\n  const [currentType, setCurrentType] = useState();\r\n  const [index, setIndex] = useState();\r\n  const [visibleData, setVisibleData] = useState();\r\n  const [startX, setStartX] = useState(undefined);\r\n  const handlePrev = () => {\r\n    if (index >= 1) {\r\n      setIndex((prev) => prev - 1);\r\n      if (currentType) {\r\n        setVisibleData(\r\n          data.filter((d) => d.type === currentType)[0].data[index - 1]\r\n        );\r\n      } else {\r\n        setVisibleData(data[index - 1]);\r\n      }\r\n    } else if (typeList && typeList.indexOf(currentType) !== 0) {\r\n      const newCurrentTypeIndex = typeList.indexOf(currentType) - 1;\r\n      const newType = typeList[newCurrentTypeIndex];\r\n      const typeFilteredData = data.filter((d) => d.type === newType)[0].data;\r\n      const newLength = typeFilteredData.length;\r\n      setCurrentType(newType);\r\n      setTotalLength(newLength);\r\n      setIndex(newLength - 1);\r\n      setVisibleData(typeFilteredData[newLength - 1]);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (index <= totalLength - 2) {\r\n      setIndex((prev) => prev + 1);\r\n      if (currentType) {\r\n        setVisibleData(\r\n          data.filter((d) => d.type === currentType)[0].data[index + 1]\r\n        );\r\n      } else {\r\n        setVisibleData(data[index + 1]);\r\n      }\r\n    } else if (\r\n      typeList &&\r\n      typeList.indexOf(currentType) !== typeList.length - 1\r\n    ) {\r\n      const newCurrentTypeIndex = typeList.indexOf(currentType) + 1;\r\n      const newType = typeList[newCurrentTypeIndex];\r\n      const typeFilteredData = data.filter((d) => d.type === newType)[0].data;\r\n      setCurrentType(newType);\r\n      setTotalLength(typeFilteredData.length);\r\n      setIndex(0);\r\n      setVisibleData(typeFilteredData[0]);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIndex(null);\r\n    setCurrentType(null);\r\n    setTypeList(null);\r\n    setTotalLength(null);\r\n    setVisibleData(null);\r\n    setInitialIndex(null)\r\n  };\r\n\r\n  const handleTouchStart = (e) => {\r\n    setStartX(e.touches[0].clientX);\r\n  };\r\n\r\n  const handleTouchEnd = (e) => {\r\n    const endX = e.changedTouches[0].clientX;\r\n    const diffX = startX - endX;\r\n\r\n    // Determine swipe direction based on the difference\r\n    if (Math.abs(diffX) > 50) {\r\n      if (diffX > 0) {\r\n        handleNext();\r\n      } else {\r\n        handlePrev();\r\n      }\r\n    }\r\n    setStartX(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data || !data.length) return;\r\n    if (typeof initialIndex === \"number\") {\r\n      setIndex(initialIndex);\r\n      if (initialType) {\r\n        setCurrentType(initialType);\r\n        setTypeList(data?.map((d) => d.type));\r\n        const typeFilteredData = data.filter((d) => d.type === initialType)[0]\r\n          .data;\r\n        setTotalLength(typeFilteredData.length);\r\n        setVisibleData(typeFilteredData[initialIndex]);\r\n      } else {\r\n        setTotalLength(data.length);\r\n        setVisibleData(data[initialIndex]);\r\n      }\r\n    }\r\n  }, [data, initialIndex, initialType]);\r\n\r\n  return {\r\n    visibleData,\r\n    handlePrev,\r\n    handleNext,\r\n    handleClose,\r\n    handleTouchStart,\r\n    handleTouchEnd,\r\n  };\r\n};\r\n\r\nexport default useCarousel;\r\n","import React from \"react\";\r\nimport useCarousel from \"../hooks/useCarousel\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { speak } from \"../../helper/speak\";\r\n\r\nconst Carousel = ({ data, initialIndex, setInitialIndex, initialType, mainKey }) => {\r\n  const {\r\n    visibleData,\r\n    handlePrev,\r\n    handleNext,\r\n    handleClose,\r\n    handleTouchStart,\r\n    handleTouchEnd,\r\n  } = useCarousel(data, initialIndex, setInitialIndex, initialType);\r\n  return visibleData ? (\r\n    <div className=\"modal-backdrop\">\r\n      <div className=\"modal-container\">\r\n        <div\r\n          className=\"modal-body\"\r\n          onTouchStart={handleTouchStart}\r\n          onTouchEnd={handleTouchEnd}\r\n        >\r\n          <GiSpeaker\r\n            size={20}\r\n            onClick={(e) => {\r\n              mainKey === \"kana\"\r\n                ? speak(visibleData[\"kana\"])\r\n                : speak(visibleData[\"jp\"]);\r\n            }}\r\n          />\r\n          {Object.keys(visibleData)?.map((key) => {\r\n            return visibleData[key] ? (\r\n              <div\r\n                className={`carousel-key${\r\n                  key === mainKey ? \" carousel-main-key\" : \"\"\r\n                }`}\r\n                key={key}\r\n              >\r\n                {key !== mainKey\r\n                  ? key + \" : \" + visibleData[key]\r\n                  : visibleData[key]}\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button className=\"quiz-button\" onClick={handlePrev}>\r\n            Prev\r\n          </button>\r\n          <button className=\"quiz-button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button className=\"quiz-button\" onClick={handleNext}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\nimport useList from \"../hooks/useList\";\r\nimport { speak } from \"../../helper/speak\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport ScrollTopBtn from \"./ScrollTopBtn\";\r\nimport Loader from \"./Loader\";\r\nimport EmptyPage from \"./EmptyPage\";\r\nimport Carousel from \"./Carousel\";\r\n\r\nconst ListComponent = ({\r\n  heading,\r\n  dataService,\r\n  level,\r\n  mainKey,\r\n  noShowKeys,\r\n  letter,\r\n  dataValues,\r\n}) => {\r\n  const { data, keys, typedData, loading, index, setIndex, currentType, handleCarousel } =\r\n    useList(dataService, level, mainKey, noShowKeys, dataValues);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <div className=\"list\">\r\n      <h1 className=\"list-heading\">{heading}</h1>\r\n      {keys ? (\r\n        typedData ? (\r\n          typedData.map((d, i) => {\r\n            return (\r\n              <React.Fragment key={i}>\r\n                <h2 className=\"list-heading\">{d.type}</h2>\r\n                <List\r\n                  data={d.data}\r\n                  mainKey={mainKey}\r\n                  letter={letter}\r\n                  keys={keys}\r\n                  handleCarousel={handleCarousel}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          })\r\n        ) : (\r\n          <List\r\n            data={data}\r\n            keys={keys}\r\n            mainKey={mainKey}\r\n            letter={letter}\r\n            handleCarousel={handleCarousel}\r\n          />\r\n        )\r\n      ) : (\r\n        <EmptyPage />\r\n      )}\r\n      <ScrollTopBtn />\r\n      <Carousel\r\n        data={typedData ? typedData : data}\r\n        initialIndex={index}\r\n        setInitialIndex={setIndex}\r\n        initialType={currentType}\r\n        mainKey={mainKey}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst List = ({ data, keys, mainKey, letter, handleCarousel }) => {\r\n  return data?.map((subData, index) => (\r\n    <div\r\n      key={index}\r\n      className={`${letter ? \"letter-\" : \"\"}list-element`}\r\n      onClick={() => handleCarousel(index, subData?.type)}\r\n    >\r\n      <div className={letter ? \"\" : \"list-main\"}>\r\n        {subData[mainKey]}\r\n        <GiSpeaker\r\n          size={20}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            letter ? speak(subData[\"kana\"]) : speak(subData[mainKey]);\r\n          }}\r\n        />\r\n      </div>\r\n      {keys.map((key) => {\r\n        return <div>{subData[key]}</div>;\r\n      })}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default ListComponent;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useScrollTopBtn = () => {\r\n  const [top, setTop] = useState(true);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollTop =\r\n        window.pageYOffset || document.documentElement.scrollTop;\r\n      setTop(scrollTop === 0);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n  return { top, scrollToTop };\r\n};\r\n\r\nexport default useScrollTopBtn;\r\n","import React from \"react\";\r\nimport { BiUpArrow } from \"react-icons/bi\";\r\nimport useScrollTopBtn from \"../hooks/useScrollTopBtn\";\r\n\r\nconst ScrollTopBtn = () => {\r\n  const { top, scrollToTop } = useScrollTopBtn();\r\n  return (\r\n    !top && (\r\n      <BiUpArrow\r\n        className=\"top-btn quiz-button\"\r\n        onClick={scrollToTop}\r\n        size={20}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default ScrollTopBtn;\r\n","export const lessonStart = {\r\n  n5: 1,\r\n  n4: 26,\r\n};\r\n"],"names":["level","data","setData","useState","loading","setLoading","chapterRef","useRef","useEffect","async","listService","getVocabulary","e","console","log","getData","_ref","_Array$from","_Object$keys","useVocabularyList","_jsx","Loader","_Fragment","children","_jsxs","className","Array","from","length","_","index","lessonStart","map","chapter","onClick","window","scrollTo","top","current","offsetTop","behavior","Object","keys","chapter_no","ref","el","ListComponent","dataValues","heading","concat","mainKey","noShowKeys","baseUrl","process","hiraganaUrl","katakanaUrl","katakanaReadingUrl","adverbUrl","eAdjectiveUrl","naAdjectiveUrl","particleUrl","vocabularyUrl","kanjiUrl","timeUrl","countingUrl","directionsUrl","getHiragana","axios","get","error","getKatakana","getKatakanaReading","getAdverbs","url","getEAdjective","getNaAdjective","getParticles","lesson","getKanji","getTime","getCounting","getDirections","useList","dataService","setKeys","typedData","setTypedData","setIndex","undefined","currentType","setCurrentType","filter","key","isArray","indexOf","hash","reduce","p","c","type","push","k","handleCarousel","num","speak","text","utterance","SpeechSynthesisUtterance","lang","japaneseVoices","speechSynthesis","getVoices","voice","pitch","rate","EmptyPage","useCarousel","initialIndex","setInitialIndex","initialType","totalLength","setTotalLength","typeList","setTypeList","visibleData","setVisibleData","startX","setStartX","handlePrev","prev","d","newCurrentTypeIndex","newType","typeFilteredData","newLength","handleNext","handleClose","handleTouchStart","touches","clientX","handleTouchEnd","endX","changedTouches","diffX","Math","abs","onTouchStart","onTouchEnd","GiSpeaker","size","List","_ref2","letter","subData","stopPropagation","i","React","ScrollTopBtn","Carousel","useScrollTopBtn","setTop","handleScroll","scrollTop","pageYOffset","document","documentElement","addEventListener","removeEventListener","scrollToTop","BiUpArrow","n5","n4"],"sourceRoot":""}