{"version":3,"file":"static/js/493.627860d2.chunk.js","mappings":"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","sources":["components/hooks/useLetterQuiz.js","components/UI/LetterQuiz.js","components/hooks/useScrollTopBtn.js","components/UI/ScrollTopBtn.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useLetterQuiz = (dataService, level, lesson, type) => {\r\n  const navigate = useNavigate();\r\n  const questionKey = type === \"vocab\" ? \"jp\" : \"kana\";\r\n  const answerKey = type === \"vocab\" ? \"pronunciation\" : \"roumaji\";\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [randomData, setRandomData] = useState([]);\r\n  const [correct, setCorrect] = useState([]);\r\n  const [incorrect, setIncorrect] = useState([]);\r\n  const [finish, setFinish] = useState(false);\r\n  const [timesWrong, setTimesWrong] = useState(null);\r\n  const handleBlur = (e, answer) => {\r\n    if (!e.target.value) return;\r\n    if (e.target.value.toLowerCase() === answer[answerKey]) {\r\n      setCorrect((prev) => [...prev, answer[questionKey]]);\r\n    } else {\r\n      setIncorrect((prev) => [...prev, answer[questionKey]]);\r\n    }\r\n  };\r\n  const handleFinish = () => {\r\n    setTimesWrong(\r\n      [...incorrect]?.reduce(\r\n        (attempts, d) => (\r\n          // eslint-disable-next-line\r\n          attempts[d] ? (attempts[d] = attempts[d] + 1) : (attempts[d] = 1),\r\n          attempts\r\n        ),\r\n        {}\r\n      )\r\n    );\r\n    setFinish(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!dataService) return;\r\n    const getData = async () => {\r\n      try {\r\n        if (type === \"vocab\") {\r\n          if (!lesson || !level) return;\r\n          const data = await dataService(level, lesson);\r\n          setData(data.data);\r\n        } else {\r\n          const data = await dataService();\r\n          setData(data.data);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n  }, [dataService, level, lesson, type]);\r\n\r\n  useEffect(() => {\r\n    if (!data.length) return;\r\n    setRandomData(data.sort(() => 0.5 - Math.random()));\r\n  }, [data]);\r\n\r\n  const handleReset = () => navigate(0);\r\n  return {\r\n    randomData,\r\n    correct,\r\n    incorrect,\r\n    finish,\r\n    questionKey,\r\n    answerKey,\r\n    handleBlur,\r\n    handleReset,\r\n    handleFinish,\r\n    timesWrong,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useLetterQuiz;\r\n","import React from \"react\";\r\nimport useLetterQuiz from \"../hooks/useLetterQuiz\";\r\nimport ScrollTopBtn from \"./ScrollTopBtn\";\r\nimport Loader from \"../UI/Loader\";\r\n\r\nconst LettersQuiz = ({ dataService, level, lesson, type }) => {\r\n  const {\r\n    randomData,\r\n    correct,\r\n    incorrect,\r\n    finish,\r\n    questionKey,\r\n    answerKey,\r\n    handleBlur,\r\n    handleReset,\r\n    handleFinish,\r\n    timesWrong,\r\n    loading,\r\n  } = useLetterQuiz(dataService, level, lesson, type);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      <div className=\"letter-list\">\r\n        {randomData?.map((letter) => {\r\n          return (\r\n            <div\r\n              className={`letter-element ${\r\n                correct.indexOf(letter[questionKey]) !== -1\r\n                  ? \"correct\"\r\n                  : incorrect.indexOf(letter[questionKey]) !== -1\r\n                  ? \"incorrect\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <div>{letter[questionKey]}</div>\r\n              {finish && <div>{letter[answerKey]}</div>}\r\n              <input\r\n                autoComplete=\"off\"\r\n                name={answerKey}\r\n                disabled={finish || correct.indexOf(letter[questionKey]) !== -1}\r\n                onBlur={(e) => handleBlur(e, letter)}\r\n                onFocus={(e) => (e.target.value = \"\")}\r\n              />\r\n              {timesWrong && (\r\n                <div className=\"incorrect-count\">\r\n                  Times Incorrect: {timesWrong[letter[questionKey]] ?? 0}\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {!finish && (\r\n        <button className=\"quiz-button\" onClick={handleFinish}>\r\n          Finish\r\n        </button>\r\n      )}\r\n      <button onClick={handleReset} className=\"quiz-button\">\r\n        Restart\r\n      </button>\r\n      <ScrollTopBtn />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LettersQuiz;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useScrollTopBtn = () => {\r\n  const [top, setTop] = useState(true);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollTop =\r\n        window.pageYOffset || document.documentElement.scrollTop;\r\n      setTop(scrollTop === 0);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n  return { top, scrollToTop };\r\n};\r\n\r\nexport default useScrollTopBtn;\r\n","import React from \"react\";\r\nimport { BiUpArrow } from \"react-icons/bi\";\r\nimport useScrollTopBtn from \"../hooks/useScrollTopBtn\";\r\n\r\nconst ScrollTopBtn = () => {\r\n  const { top, scrollToTop } = useScrollTopBtn();\r\n  return (\r\n    !top && (\r\n      <BiUpArrow\r\n        className=\"top-btn quiz-button\"\r\n        onClick={scrollToTop}\r\n        size={20}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default ScrollTopBtn;\r\n"],"names":["useLetterQuiz","dataService","level","lesson","type","navigate","useNavigate","questionKey","answerKey","data","setData","useState","loading","setLoading","randomData","setRandomData","correct","setCorrect","incorrect","setIncorrect","finish","setFinish","timesWrong","setTimesWrong","useEffect","async","e","console","log","getData","length","sort","Math","random","handleBlur","answer","target","value","toLowerCase","prev","handleReset","handleFinish","_ref","reduce","attempts","d","_jsx","Loader","_jsxs","_Fragment","children","className","map","letter","_timesWrong$letter$qu","concat","indexOf","autoComplete","name","disabled","onBlur","onFocus","onClick","ScrollTopBtn","useScrollTopBtn","top","setTop","handleScroll","scrollTop","window","pageYOffset","document","documentElement","addEventListener","removeEventListener","scrollToTop","scrollTo","behavior","BiUpArrow","size"],"sourceRoot":""}