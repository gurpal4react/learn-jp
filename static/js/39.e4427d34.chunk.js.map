{"version":3,"file":"static/js/39.e4427d34.chunk.js","mappings":"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","sources":["components/hooks/useList.js","helper/speak.js","components/UI/EmptyPage.js","components/hooks/useCarousel.js","components/UI/Carousel.js","components/UI/List.js","components/hooks/useScrollTopBtn.js","components/UI/ScrollTopBtn.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useList = (dataService, level, mainKey, noShowKeys, dataValues) => {\r\n  const [keys, setKeys] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [typedData, setTypedData] = useState(null);\r\n  const [index, setIndex] = useState(undefined);\r\n  const [currentType, setCurrentType] = useState(undefined);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleCarousel = (num, type) => {\r\n    setIndex(num);\r\n    if (type) {\r\n      setCurrentType(type);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataValues) {\r\n      setData(dataValues);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (!dataService) return;\r\n    const getData = async () => {\r\n      try {\r\n        const data = await dataService(level);\r\n        setData(data.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n  }, [dataService, level, dataValues]);\r\n\r\n  useEffect(() => {\r\n    if (!data || !data.length) return;\r\n    setKeys(\r\n      Object.keys(data[0]).filter(\r\n        (key) =>\r\n          key !== mainKey &&\r\n          !(Array.isArray(noShowKeys) && noShowKeys.indexOf(key) !== -1)\r\n      )\r\n    );\r\n    if (Object.keys(data[0]).indexOf(\"type\") !== -1) {\r\n      const hash = data.reduce(\r\n        // eslint-disable-next-line\r\n        (p, c) => (p[c.type] ? p[c.type].push(c) : (p[c.type] = [c]), p),\r\n        {}\r\n      );\r\n      setTypedData(Object.keys(hash).map((k) => ({ type: k, data: hash[k] })));\r\n    }\r\n  }, [data, mainKey, noShowKeys]);\r\n\r\n  return {\r\n    data,\r\n    keys,\r\n    typedData,\r\n    loading,\r\n    index,\r\n    currentType,\r\n    handleCarousel,\r\n  };\r\n};\r\n\r\nexport default useList;\r\n","export const speak = (text) => {\r\n  const utterance = new SpeechSynthesisUtterance(text);\r\n  utterance.lang = \"ja-JP\"; // Set the language to Japanese\r\n\r\n  // Fetch available voices and filter for Japanese voices\r\n  let voices = window.speechSynthesis.getVoices();\r\n  const japaneseVoices = voices.filter((voice) => voice.lang === \"ja-JP\");\r\n\r\n  // Set a Japanese voice if available\r\n  if (japaneseVoices.length > 0) {\r\n    utterance.voice = japaneseVoices[0]; // Using the first Japanese voice available\r\n  }\r\n\r\n  // Optional: Adjust pitch and rate for more natural sounding speech\r\n  utterance.pitch = 1.2; // Slightly higher pitch\r\n  utterance.rate = 0.9; // Slightly slower rate to mimic natural speaking pace\r\n\r\n  window.speechSynthesis.speak(utterance);\r\n};\r\n","import React from 'react'\r\n\r\nconst EmptyPage = () => {\r\n  return (\r\n    <div className='error-page'>\r\n      No Data to show\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmptyPage\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useCarousel = (data, initialIndex, initialType) => {\r\n  const [totalLength, setTotalLength] = useState();\r\n  const [typeList, setTypeList] = useState();\r\n  const [currentType, setCurrentType] = useState();\r\n  const [index, setIndex] = useState();\r\n  const [visibleData, setVisibleData] = useState();\r\n  const [startX, setStartX] = useState(undefined);\r\n  console.log({initialIndex, index, visibleData})\r\n  const handlePrev = () => {\r\n    if (index >= 1) {\r\n      setIndex((prev) => prev - 1);\r\n      if (currentType) {\r\n        setVisibleData(\r\n          data.filter((d) => d.type === currentType)[0].data[index - 1]\r\n        );\r\n      } else {\r\n        setVisibleData(data[index - 1]);\r\n      }\r\n    } else if (typeList && typeList.indexOf(currentType) !== 0) {\r\n      const newCurrentTypeIndex = typeList.indexOf(currentType) - 1;\r\n      const newType = typeList[newCurrentTypeIndex];\r\n      const typeFilteredData = data.filter((d) => d.type === newType)[0].data;\r\n      const newLength = typeFilteredData.length;\r\n      setCurrentType(newType);\r\n      setTotalLength(newLength);\r\n      setIndex(newLength - 1);\r\n      setVisibleData(typeFilteredData[newLength - 1]);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (index <= totalLength - 2) {\r\n      setIndex((prev) => prev + 1);\r\n      if (currentType) {\r\n        setVisibleData(\r\n          data.filter((d) => d.type === currentType)[0].data[index + 1]\r\n        );\r\n      } else {\r\n        setVisibleData(data[index + 1]);\r\n      }\r\n    } else if (\r\n      typeList &&\r\n      typeList.indexOf(currentType) !== typeList.length - 1\r\n    ) {\r\n      const newCurrentTypeIndex = typeList.indexOf(currentType) + 1;\r\n      const newType = typeList[newCurrentTypeIndex];\r\n      const typeFilteredData = data.filter((d) => d.type === newType)[0].data;\r\n      setCurrentType(newType);\r\n      setTotalLength(typeFilteredData.length);\r\n      setIndex(0);\r\n      setVisibleData(typeFilteredData[0]);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIndex(null);\r\n    setCurrentType(null);\r\n    setTypeList(null);\r\n    setTotalLength(null);\r\n    setVisibleData(null);\r\n  };\r\n\r\n  const handleTouchStart = (e) => {\r\n    setStartX(e.touches[0].clientX);\r\n  };\r\n\r\n  const handleTouchEnd = (e) => {\r\n    const endX = e.changedTouches[0].clientX;\r\n    const diffX = startX - endX;\r\n\r\n    // Determine swipe direction based on the difference\r\n    if (Math.abs(diffX) > 50) {\r\n      if (diffX > 0) {\r\n        handleNext();\r\n      } else {\r\n        handlePrev();\r\n      }\r\n    }\r\n    setStartX(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data || !data.length) return;\r\n    if (typeof initialIndex === \"number\") {\r\n      setIndex(initialIndex);\r\n      if (initialType) {\r\n        setCurrentType(initialType);\r\n        setTypeList(data?.map((d) => d.type));\r\n        const typeFilteredData = data.filter((d) => d.type === initialType)[0]\r\n          .data;\r\n        setTotalLength(typeFilteredData.length);\r\n        setVisibleData(typeFilteredData[initialIndex]);\r\n      } else {\r\n        setTotalLength(data.length);\r\n        setVisibleData(data[initialIndex]);\r\n      }\r\n    }\r\n  }, [data, initialIndex, initialType]);\r\n\r\n  return {\r\n    visibleData,\r\n    handlePrev,\r\n    handleNext,\r\n    handleClose,\r\n    handleTouchStart,\r\n    handleTouchEnd,\r\n  };\r\n};\r\n\r\nexport default useCarousel;\r\n","import React from \"react\";\r\nimport useCarousel from \"../hooks/useCarousel\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { speak } from \"../../helper/speak\";\r\n\r\nconst Carousel = ({ data, initialIndex, initialType, mainKey }) => {\r\n  const {\r\n    visibleData,\r\n    handlePrev,\r\n    handleNext,\r\n    handleClose,\r\n    handleTouchStart,\r\n    handleTouchEnd,\r\n  } = useCarousel(data, initialIndex, initialType);\r\n  console.log({a:visibleData?'yes':'no'})\r\n  return visibleData ? (\r\n    <div className=\"modal-backdrop\">\r\n      <div className=\"modal-container\">\r\n        <div\r\n          className=\"modal-body\"\r\n          onTouchStart={handleTouchStart}\r\n          onTouchEnd={handleTouchEnd}\r\n        >\r\n          <GiSpeaker\r\n            size={20}\r\n            onClick={(e) => {\r\n              mainKey === \"kana\"\r\n                ? speak(visibleData[\"kana\"])\r\n                : speak(visibleData[\"jp\"]);\r\n            }}\r\n          />\r\n          {Object.keys(visibleData)?.map((key) => {\r\n            return visibleData[key] ? (\r\n              <div\r\n                className={`carousel-key${\r\n                  key === mainKey ? \" carousel-main-key\" : \"\"\r\n                }`}\r\n                key={key}\r\n              >\r\n                {key !== mainKey\r\n                  ? key + \" : \" + visibleData[key]\r\n                  : visibleData[key]}\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button className=\"quiz-button\" onClick={handlePrev}>\r\n            Prev\r\n          </button>\r\n          <button className=\"quiz-button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button className=\"quiz-button\" onClick={handleNext}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\nimport useList from \"../hooks/useList\";\r\nimport { speak } from \"../../helper/speak\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport ScrollTopBtn from \"./ScrollTopBtn\";\r\nimport Loader from \"./Loader\";\r\nimport EmptyPage from \"./EmptyPage\";\r\nimport Carousel from \"./Carousel\";\r\n\r\nconst ListComponent = ({\r\n  heading,\r\n  dataService,\r\n  level,\r\n  mainKey,\r\n  noShowKeys,\r\n  letter,\r\n  dataValues,\r\n}) => {\r\n  const { data, keys, typedData, loading, index, currentType, handleCarousel } =\r\n    useList(dataService, level, mainKey, noShowKeys, dataValues);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <div className=\"list\">\r\n      <h1 className=\"list-heading\">{heading}</h1>\r\n      {keys ? (\r\n        typedData ? (\r\n          typedData.map((d, i) => {\r\n            return (\r\n              <React.Fragment key={i}>\r\n                <h2 className=\"list-heading\">{d.type}</h2>\r\n                <List\r\n                  data={d.data}\r\n                  mainKey={mainKey}\r\n                  letter={letter}\r\n                  keys={keys}\r\n                  handleCarousel={handleCarousel}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          })\r\n        ) : (\r\n          <List\r\n            data={data}\r\n            keys={keys}\r\n            mainKey={mainKey}\r\n            letter={letter}\r\n            handleCarousel={handleCarousel}\r\n          />\r\n        )\r\n      ) : (\r\n        <EmptyPage />\r\n      )}\r\n      <ScrollTopBtn />\r\n      <Carousel\r\n        data={typedData ? typedData : data}\r\n        initialIndex={index}\r\n        initialType={currentType}\r\n        mainKey={mainKey}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst List = ({ data, keys, mainKey, letter, handleCarousel }) => {\r\n  return data?.map((subData, index) => (\r\n    <div\r\n      key={index}\r\n      className={`${letter ? \"letter-\" : \"\"}list-element`}\r\n      onClick={() => handleCarousel(index, subData?.type)}\r\n    >\r\n      <div className={letter ? \"\" : \"list-main\"}>\r\n        {subData[mainKey]}\r\n        <GiSpeaker\r\n          size={20}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            letter ? speak(subData[\"kana\"]) : speak(subData[mainKey]);\r\n          }}\r\n        />\r\n      </div>\r\n      {keys.map((key) => {\r\n        return <div>{subData[key]}</div>;\r\n      })}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default ListComponent;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useScrollTopBtn = () => {\r\n  const [top, setTop] = useState(true);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollTop =\r\n        window.pageYOffset || document.documentElement.scrollTop;\r\n      setTop(scrollTop === 0);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n  return { top, scrollToTop };\r\n};\r\n\r\nexport default useScrollTopBtn;\r\n","import React from \"react\";\r\nimport { BiUpArrow } from \"react-icons/bi\";\r\nimport useScrollTopBtn from \"../hooks/useScrollTopBtn\";\r\n\r\nconst ScrollTopBtn = () => {\r\n  const { top, scrollToTop } = useScrollTopBtn();\r\n  return (\r\n    !top && (\r\n      <BiUpArrow\r\n        className=\"top-btn quiz-button\"\r\n        onClick={scrollToTop}\r\n        size={20}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default ScrollTopBtn;\r\n"],"names":["useList","dataService","level","mainKey","noShowKeys","dataValues","keys","setKeys","useState","data","setData","typedData","setTypedData","index","setIndex","undefined","currentType","setCurrentType","loading","setLoading","useEffect","async","e","console","log","getData","length","Object","filter","key","Array","isArray","indexOf","hash","reduce","p","c","type","push","map","k","handleCarousel","num","speak","text","utterance","SpeechSynthesisUtterance","lang","japaneseVoices","window","speechSynthesis","getVoices","voice","pitch","rate","EmptyPage","_jsx","className","children","useCarousel","initialIndex","initialType","totalLength","setTotalLength","typeList","setTypeList","visibleData","setVisibleData","startX","setStartX","handlePrev","prev","d","newCurrentTypeIndex","newType","typeFilteredData","newLength","handleNext","handleClose","handleTouchStart","touches","clientX","handleTouchEnd","endX","changedTouches","diffX","Math","abs","_ref","_Object$keys","a","_jsxs","onTouchStart","onTouchEnd","GiSpeaker","size","onClick","concat","_Fragment","List","_ref2","letter","subData","stopPropagation","heading","Loader","i","React","ScrollTopBtn","Carousel","useScrollTopBtn","top","setTop","handleScroll","scrollTop","pageYOffset","document","documentElement","addEventListener","removeEventListener","scrollToTop","scrollTo","behavior","BiUpArrow"],"sourceRoot":""}