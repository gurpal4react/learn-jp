{"version":3,"file":"static/js/383.91bac9a6.chunk.js","mappings":"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","sources":["data/app/LetterBtns.js","Routes/LetterRoutes.js","Services/list.js","Services/quiz.js"],"sourcesContent":["export const LetterBtns = [\r\n  { link: \"hiragana-list\", icon: \"ひ\", text: \"Hiragana Letter List\" },\r\n  { link: \"katakana-list\", icon: \"カ\", text: \"Katakana Letter List\" },\r\n  { link: \"combined-quiz\", icon: \"ひ/カ\", text: \"Letters MCQ Quiz\" },\r\n  { link: \"hiragana-quiz\", icon: \"ひ\", text: \"Hiragana Letter Quiz\" },\r\n  { link: \"katakana-quiz\", icon: \"カ\", text: \"Katakana Letter Quiz\" },\r\n  { link: \"katakana-reading-list\", icon: \"カ\", text: \"Katakana Reading List\" },\r\n];\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport { LetterBtns } from \"../data/app/LetterBtns\";\r\nimport Loader from \"../components/UI/Loader\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport ErrorPage from \"../components/UI/ErrorPage\";\r\nimport listService from \"../Services/list\";\r\nimport quizService from \"../Services/quiz\";\r\n\r\nconst LinkPage = lazy(() => import(\"../Pages/LinkPage\"));\r\nconst LettersQuiz = lazy(() => import(\"../components/UI/LetterQuiz\"));\r\nconst Quiz = lazy(() => import(\"../components/UI/Quiz\"));\r\nconst ListComponent = lazy(() => import(\"../components/UI/List\"));\r\n\r\nconst LetterRoutes = () => {\r\n  return (\r\n    <ErrorBoundary fallback={<ErrorPage />}>\r\n      <Suspense fallback={Loader}>\r\n        <Routes>\r\n          <Route index element={<LinkPage btnObj={LetterBtns} />} />\r\n          <Route\r\n            path=\"/hiragana-list\"\r\n            element={\r\n              <ListComponent\r\n                heading=\"List of Letters in Hiragana\"\r\n                dataService={listService.getHiragana}\r\n                letter={true}\r\n                noShowKeys={[\"type\"]}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/katakana-list\"\r\n            element={\r\n              <ListComponent\r\n                heading=\"List of Letters in Katakana\"\r\n                dataService={listService.getKatakana}\r\n                letter={true}\r\n                noShowKeys={[\"type\"]}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/katakana-reading-list\"\r\n            element={\r\n              <ListComponent\r\n                dataService={listService.getKatakanaReading}\r\n                mainKey=\"jp\"\r\n                heading=\"List of Katakana Words\"\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/hiragana-quiz\"\r\n            element={<LettersQuiz dataService={listService.getHiragana} />}\r\n          />\r\n          <Route\r\n            path=\"/katakana-quiz\"\r\n            element={<LettersQuiz dataService={listService.getKatakana} />}\r\n          />\r\n          <Route\r\n            path=\"/combined-quiz\"\r\n            element={\r\n              <Quiz\r\n                questionService={quizService.getLetters}\r\n                limit={10}\r\n              />\r\n            }\r\n          />\r\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default LetterRoutes;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"list/\";\r\n\r\n// Letters\r\nconst hiraganaUrl = baseUrl + \"hiragana\";\r\nconst katakanaUrl = baseUrl + \"katakana\";\r\nconst katakanaReadingUrl = baseUrl + \"katakana-reading\";\r\n\r\n// Grammar\r\nconst adverbUrl = baseUrl + \"adverbs\";\r\nconst eAdjectiveUrl = baseUrl + \"e-adjective\";\r\nconst naAdjectiveUrl = baseUrl + \"na-adjective\";\r\nconst particleUrl = baseUrl + \"particles\";\r\n\r\n// Vocabulary\r\nconst vocabularyUrl = baseUrl + \"vocabulary\";\r\n\r\n// Kanji\r\nconst kanjiUrl = baseUrl + \"kanji\";\r\n\r\n// Common\r\nconst timeUrl = baseUrl + \"common/time\";\r\nconst countingUrl = baseUrl + \"common/counting\";\r\nconst directionsUrl = baseUrl + \"common/directions\";\r\n\r\n// Letters\r\nconst listService = {\r\n  getHiragana: async () => {\r\n    try {\r\n      const data = await axios.get(hiraganaUrl);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getKatakana: async () => {\r\n    try {\r\n      const data = await axios.get(katakanaUrl);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getKatakanaReading: async () => {\r\n    try {\r\n      const data = await axios.get(katakanaReadingUrl);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Grammar\r\n  getAdverbs: async (level) => {\r\n    try {\r\n      let url = adverbUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getEAdjective: async (level) => {\r\n    try {\r\n      let url = eAdjectiveUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getNaAdjective: async (level) => {\r\n    try {\r\n      let url = naAdjectiveUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getParticles: async (level) => {\r\n    try {\r\n      let url = particleUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Vocabulary\r\n  getVocabulary: async (level, lesson) => {\r\n    try {\r\n      let url = vocabularyUrl;\r\n      if (level) {\r\n        url += `?level=${level}`;\r\n        if (lesson) url += `&lesson=${lesson}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Kanji\r\n  getKanji: async (level) => {\r\n    try {\r\n      let url = kanjiUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Common\r\n  getTime: async (level) => {\r\n    try {\r\n      let url = timeUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getCounting: async (level) => {\r\n    try {\r\n      let url = countingUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getDirections: async (level) => {\r\n    try {\r\n      let url = directionsUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n};\r\n\r\nexport default listService;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"quiz/\";\r\n\r\n// Letters\r\nconst lettersUrl = baseUrl + \"letters\";\r\n\r\n// Grammar\r\nconst particleUrl = baseUrl + \"particles\";\r\n\r\n// Vocabulary\r\nconst vocabularyUrl = baseUrl + \"vocabulary\";\r\n\r\n// Kanji\r\nconst kanjiUrl = baseUrl + \"kanji\";\r\n\r\n// Letters\r\nconst quizService = {\r\n  getLetters: async (limit) => {\r\n    try {\r\n      let url = lettersUrl;\r\n      if (limit) url += `?limit=${limit}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Grammar\r\n  getParticles: async (level, limit) => {\r\n    try {\r\n      let url = particleUrl;\r\n      if (level) {\r\n        url += `?level=${level}`;\r\n        if (limit) url += `&limit=${limit}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Vocabulary\r\n  getVocabularyMeaningToWord: async (level, lesson) => {\r\n    try {\r\n      let url = vocabularyUrl;\r\n      if (level) {\r\n        url += `?level=${level}&type=mtw`;\r\n        if (lesson) url += `&lesson=${lesson}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n  getVocabularyWordToMeaning: async (level, lesson) => {\r\n    try {\r\n      let url = vocabularyUrl;\r\n      if (level) {\r\n        url += `?level=${level}&type=wtm`;\r\n        if (lesson) url += `&lesson=${lesson}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getKanji: async (level, limit) => {\r\n    try {\r\n      let url = kanjiUrl;\r\n      if (level) {\r\n        url += `?level=${level}`;\r\n        if (limit) url += `&limit=${limit}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n};\r\n\r\nexport default quizService;\r\n"],"names":["LetterBtns","link","icon","text","LinkPage","lazy","LettersQuiz","Quiz","ListComponent","LetterRoutes","_jsx","ErrorBoundary","fallback","ErrorPage","children","Suspense","Loader","_jsxs","Routes","Route","index","element","btnObj","path","heading","dataService","listService","getHiragana","letter","noShowKeys","getKatakana","getKatakanaReading","mainKey","questionService","quizService","getLetters","limit","Navigate","to","baseUrl","process","hiraganaUrl","katakanaUrl","katakanaReadingUrl","adverbUrl","eAdjectiveUrl","naAdjectiveUrl","particleUrl","vocabularyUrl","kanjiUrl","timeUrl","countingUrl","directionsUrl","async","axios","get","error","console","getAdverbs","url","level","concat","getEAdjective","getNaAdjective","getParticles","getVocabulary","lesson","getKanji","getTime","getCounting","getDirections","lettersUrl","getVocabularyMeaningToWord","getVocabularyWordToMeaning"],"sourceRoot":""}