{"version":3,"file":"static/js/834.d5fadb5f.chunk.js","mappings":"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","sources":["components/hooks/useList.js","helper/speak.js","components/UI/EmptyPage.js","components/UI/List.js","components/hooks/useScrollTopBtn.js","components/UI/ScrollTopBtn.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useList = (dataService, level, mainKey, noShowKeys, dataValues) => {\r\n  const [keys, setKeys] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [typedData, setTypedData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    if(dataValues){\r\n      setData(dataValues)\r\n      setLoading(false);\r\n      return\r\n    }\r\n    if (!dataService) return;\r\n    const getData = async () => {\r\n      try {\r\n        const data = await dataService(level);\r\n        setData(data.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n  }, [dataService, level, dataValues]);\r\n\r\n  useEffect(() => {\r\n    if (!data || !data.length) return;\r\n    setKeys(\r\n      Object.keys(data[0]).filter(\r\n        (key) =>\r\n          key !== mainKey &&\r\n          !(Array.isArray(noShowKeys) && noShowKeys.indexOf(key) !== -1)\r\n      )\r\n    );\r\n    if (Object.keys(data[0]).indexOf(\"type\") !== -1) {\r\n      const hash = data.reduce(\r\n        // eslint-disable-next-line\r\n        (p, c) => (p[c.type] ? p[c.type].push(c) : (p[c.type] = [c]), p),\r\n        {}\r\n      );\r\n      setTypedData(Object.keys(hash).map((k) => ({ type: k, data: hash[k] })));\r\n    }\r\n  }, [data, mainKey, noShowKeys]);\r\n\r\n  return {\r\n    data,\r\n    keys,\r\n    typedData,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useList;\r\n","export const speak = (text) => {\r\n  const utterance = new SpeechSynthesisUtterance(text);\r\n  utterance.lang = \"ja-JP\"; // Set the language to Japanese\r\n\r\n  // Fetch available voices and filter for Japanese voices\r\n  let voices = window.speechSynthesis.getVoices();\r\n  const japaneseVoices = voices.filter((voice) => voice.lang === \"ja-JP\");\r\n\r\n  // Set a Japanese voice if available\r\n  if (japaneseVoices.length > 0) {\r\n    utterance.voice = japaneseVoices[0]; // Using the first Japanese voice available\r\n  }\r\n\r\n  // Optional: Adjust pitch and rate for more natural sounding speech\r\n  utterance.pitch = 1.2; // Slightly higher pitch\r\n  utterance.rate = 0.9; // Slightly slower rate to mimic natural speaking pace\r\n\r\n  window.speechSynthesis.speak(utterance);\r\n};\r\n","import React from 'react'\r\n\r\nconst EmptyPage = () => {\r\n  return (\r\n    <div className='error-page'>\r\n      No Data to show\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmptyPage\r\n","import React from \"react\";\r\nimport useList from \"../hooks/useList\";\r\nimport { speak } from \"../../helper/speak\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport ScrollTopBtn from \"./ScrollTopBtn\";\r\nimport Loader from \"./Loader\";\r\nimport EmptyPage from \"./EmptyPage\";\r\n\r\nconst ListComponent = ({\r\n  heading,\r\n  dataService,\r\n  level,\r\n  mainKey,\r\n  noShowKeys,\r\n  letter,\r\n  dataValues,\r\n}) => {\r\n  const { data, keys, typedData, loading } = useList(\r\n    dataService,\r\n    level,\r\n    mainKey,\r\n    noShowKeys,\r\n    dataValues\r\n  );\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <div className=\"list\">\r\n      <h1 className=\"list-heading\">{heading}</h1>\r\n      {keys ? (\r\n        typedData ? (\r\n          typedData.map((d) => {\r\n            return (\r\n              <>\r\n                <h2 className=\"list-heading\">{d.type}</h2>\r\n                <List\r\n                  data={d.data}\r\n                  mainKey={mainKey}\r\n                  letter={letter}\r\n                  keys={keys}\r\n                />\r\n              </>\r\n            );\r\n          })\r\n        ) : (\r\n          <List data={data} keys={keys} mainKey={mainKey} letter={letter} />\r\n        )\r\n      ) : (\r\n        <EmptyPage />\r\n      )}\r\n      <ScrollTopBtn />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst List = ({ data, keys, mainKey, letter }) => {\r\n  return data?.map((subData, index) => (\r\n    <div key={index} className={`${letter ? \"letter-\" : \"\"}list-element`}>\r\n      <div className={letter ? \"\" : \"list-main\"}>\r\n        {subData[mainKey]}\r\n        <GiSpeaker\r\n          size={20}\r\n          onClick={() =>\r\n            letter ? speak(subData[\"kana\"]) : speak(subData[mainKey])\r\n          }\r\n        />\r\n      </div>\r\n      {keys.map((key) => {\r\n        return <div>{subData[key]}</div>;\r\n      })}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default ListComponent;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useScrollTopBtn = () => {\r\n  const [top, setTop] = useState(true);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollTop =\r\n        window.pageYOffset || document.documentElement.scrollTop;\r\n      setTop(scrollTop === 0);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n  return { top, scrollToTop };\r\n};\r\n\r\nexport default useScrollTopBtn;\r\n","import React from \"react\";\r\nimport { BiUpArrow } from \"react-icons/bi\";\r\nimport useScrollTopBtn from \"../hooks/useScrollTopBtn\";\r\n\r\nconst ScrollTopBtn = () => {\r\n  const { top, scrollToTop } = useScrollTopBtn();\r\n  return (\r\n    !top && (\r\n      <BiUpArrow\r\n        className=\"top-btn quiz-button\"\r\n        onClick={scrollToTop}\r\n        size={20}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default ScrollTopBtn;\r\n"],"names":["useList","dataService","level","mainKey","noShowKeys","dataValues","keys","setKeys","useState","data","setData","typedData","setTypedData","loading","setLoading","useEffect","async","e","console","log","getData","length","Object","filter","key","Array","isArray","indexOf","hash","reduce","p","c","type","push","map","k","speak","text","utterance","SpeechSynthesisUtterance","lang","japaneseVoices","window","speechSynthesis","getVoices","voice","pitch","rate","EmptyPage","_jsx","className","children","List","_ref2","letter","subData","index","_jsxs","concat","GiSpeaker","size","onClick","_ref","heading","Loader","d","_Fragment","ScrollTopBtn","useScrollTopBtn","top","setTop","handleScroll","scrollTop","pageYOffset","document","documentElement","addEventListener","removeEventListener","scrollToTop","scrollTo","behavior","BiUpArrow"],"sourceRoot":""}