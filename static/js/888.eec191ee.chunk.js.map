{"version":3,"file":"static/js/888.eec191ee.chunk.js","mappings":"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","sources":["components/hooks/useQuiz.js","components/UI/Quiz.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useQuiz = (questionService, level, lesson, limit) => {\r\n  const navigate = useNavigate();\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentAnswer, setCurrentAnswer] = useState(null);\r\n  const [totalCorrect, setTotalCorrect] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    try {\r\n      if (!questionService) return;\r\n      const getData = async () => {\r\n        if (level) {\r\n          if (limit) {\r\n            const questions = await questionService(level, limit);\r\n            setQuestions(questions.data);\r\n          } else if (lesson) {\r\n            const questions = await questionService(level, lesson);\r\n            setQuestions(questions.data);\r\n          } else {\r\n            const questions = await questionService(level);\r\n            setQuestions(questions.data);\r\n          }\r\n        } else if (limit) {\r\n          const questions = await questionService(limit);\r\n          setQuestions(questions.data);\r\n        } else {\r\n          const questions = await questionService();\r\n          setQuestions(questions.data);\r\n        }\r\n        setLoading(false);\r\n      };\r\n      getData();\r\n    } catch (e) {\r\n      console.log(e);\r\n      setLoading(false);\r\n    }\r\n  }, [questionService, level, lesson, limit]);\r\n\r\n  const handleAnswer = (answer) => {\r\n    if (answers.length !== questionIndex) return;\r\n    if (answers.length === questionIndex) {\r\n      setCurrentAnswer(answer);\r\n      setAnswers([...answers, answer]);\r\n    }\r\n  };\r\n\r\n  const goNext = () => {\r\n    if (answers.length === questionIndex) {\r\n      setAnswers([...answers, null]);\r\n    }\r\n    setQuestionIndex((prev) => prev + 1);\r\n    if (currentAnswer === questions[questionIndex].answer)\r\n      setTotalCorrect((prev) => prev + 1);\r\n    setCurrentAnswer(null);\r\n  };\r\n\r\n  const handleReset = () => navigate(0);\r\n\r\n  useEffect(() => {\r\n    const handleKeyPress = (event) => {\r\n      if (event.key === \"a\") {\r\n        handleAnswer(questions[questionIndex].options[0]);\r\n      } else if (event.key === \"b\") {\r\n        handleAnswer(questions[questionIndex].options[1]);\r\n      } else if (event.key === \"c\") {\r\n        handleAnswer(questions[questionIndex].options[2]);\r\n      } else if (event.key === \"d\") {\r\n        handleAnswer(questions[questionIndex].options[3]);\r\n      }\r\n\r\n      // For \"Next\" on Enter\r\n      if (event.key === \"Enter\") {\r\n        goNext();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keypress\", handleKeyPress);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keypress\", handleKeyPress);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [questions, questionIndex, currentAnswer]);\r\n  return {\r\n    questions,\r\n    questionIndex,\r\n    handleAnswer,\r\n    goNext,\r\n    handleReset,\r\n    currentAnswer,\r\n    totalCorrect,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useQuiz;\r\n","import React from \"react\";\r\nimport useQuiz from \"../hooks/useQuiz\";\r\nimport Loader from \"../UI/Loader\";\r\nimport { AiOutlineReload } from \"react-icons/ai\";\r\n\r\nconst Quiz = ({ questionService, level, limit, lesson }) => {\r\n  const {\r\n    questions,\r\n    questionIndex,\r\n    handleAnswer,\r\n    goNext,\r\n    handleReset,\r\n    currentAnswer,\r\n    totalCorrect,\r\n    loading,\r\n  } = useQuiz(questionService, level, lesson, limit);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      <div className=\"question-container\">\r\n        {questionIndex < questions?.length && (\r\n          <>\r\n            <div className=\"question\">{questions[questionIndex].question}</div>\r\n            <div className=\"option-list\">\r\n              {questions[questionIndex]?.options?.map((option, index) => {\r\n                return (\r\n                  <div\r\n                    className={\r\n                      currentAnswer\r\n                        ? option === questions[questionIndex].answer\r\n                          ? \"option correct\"\r\n                          : option === currentAnswer\r\n                          ? \"option incorrect\"\r\n                          : \"option\"\r\n                        : \"option\"\r\n                    }\r\n                    onClick={() => {\r\n                      handleAnswer(option);\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    {option}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <button onClick={goNext} className=\"quiz-button\">\r\n              Next\r\n            </button>\r\n          </>\r\n        )}\r\n        <AiOutlineReload\r\n          size={20}\r\n          onClick={handleReset}\r\n          className=\"quiz-button\"\r\n        />\r\n        <div>Total Questions: {questions?.length}</div>\r\n        {questionIndex < questions?.length && (\r\n          <div>Current Question Number: {questionIndex + 1}</div>\r\n        )}\r\n        <div>Correct Questions: {totalCorrect}</div>\r\n        <div>\r\n          Incorrect Questions:&nbsp;\r\n          {questionIndex - totalCorrect > 0 ? questionIndex - totalCorrect : 0}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"names":["useQuiz","questionService","level","lesson","limit","navigate","useNavigate","questionIndex","setQuestionIndex","useState","questions","setQuestions","answers","setAnswers","currentAnswer","setCurrentAnswer","totalCorrect","setTotalCorrect","loading","setLoading","useEffect","getData","async","data","e","console","log","handleAnswer","answer","length","goNext","prev","handleKeyPress","event","key","options","window","addEventListener","removeEventListener","handleReset","_ref","_questions$questionIn","_questions$questionIn2","_jsx","Loader","_Fragment","children","_jsxs","className","question","map","option","index","onClick","AiOutlineReload","size"],"sourceRoot":""}