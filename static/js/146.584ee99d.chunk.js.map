{"version":3,"file":"static/js/146.584ee99d.chunk.js","mappings":"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","sources":["Pages/VocabularyQuiz.js","Services/quiz.js","components/hooks/useQuiz.js","components/UI/Quiz.js","data/app/LessonStart.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Quiz from \"../components/UI/Quiz\";\r\nimport quizService from \"../Services/quiz\";\r\nimport { lessonStart } from \"../data/app/LessonStart\";\r\n\r\nconst VocabularyQuiz = ({ type, level }) => {\r\n  const [chapter, setChapter] = useState();\r\n\r\n  return (\r\n    <>\r\n      {chapter ? (\r\n        <Quiz\r\n          questionService={\r\n            type === \"mtw\"\r\n              ? quizService.getVocabularyMeaningToWord\r\n              : quizService.getVocabularyWordToMeaning\r\n          }\r\n          level={level}\r\n          lesson={chapter}\r\n        />\r\n      ) : (\r\n        <>\r\n          <h1>Select Chapter for which you want to quiz for</h1>\r\n          {Array.from(\r\n            { length: 25 },\r\n            (_, index) => index + lessonStart[level]\r\n          )?.map((chapter) => {\r\n            return (\r\n              <button\r\n                className=\"chapter-button\"\r\n                onClick={() => setChapter(chapter)}\r\n              >\r\n                {chapter}\r\n              </button>\r\n            );\r\n          })}\r\n          <button className=\"chapter-button\" onClick={() => setChapter(\"all\")}>\r\n            All\r\n          </button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VocabularyQuiz;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"quiz/\";\r\n\r\n// Letters\r\nconst lettersUrl = baseUrl + \"letters\";\r\n\r\n// Grammar\r\nconst particleUrl = baseUrl + \"particles\";\r\n\r\n// Vocabulary\r\nconst vocabularyUrl = baseUrl + \"vocabulary\";\r\n\r\n// Kanji\r\nconst kanjiUrl = baseUrl + \"kanji\";\r\n\r\n// Letters\r\nconst quizService = {\r\n  getLetters: async (limit) => {\r\n    try {\r\n      let url = lettersUrl;\r\n      if (limit) url += `?limit=${limit}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Grammar\r\n  getParticles: async (level, limit) => {\r\n    try {\r\n      let url = particleUrl;\r\n      if (level) {\r\n        url += `?level=${level}`;\r\n        if (limit) url += `&limit=${limit}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Vocabulary\r\n  getVocabularyMeaningToWord: async (level, lesson) => {\r\n    try {\r\n      let url = vocabularyUrl;\r\n      if (level) {\r\n        url += `?level=${level}&quizType=mtw`;\r\n        if (lesson && lesson !== \"all\") url += `&lesson=${lesson}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n  getVocabularyWordToMeaning: async (level, lesson) => {\r\n    try {\r\n      let url = vocabularyUrl;\r\n      if (level) {\r\n        url += `?level=${level}&quizType=wtm`;\r\n        if (lesson && lesson !== \"all\") url += `&lesson=${lesson}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getKanji: async (level, limit) => {\r\n    try {\r\n      let url = kanjiUrl;\r\n      if (level) {\r\n        url += `?level=${level}`;\r\n        if (limit) url += `&limit=${limit}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n};\r\n\r\nexport default quizService;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useQuiz = (questionService, level, lesson, limit) => {\r\n  const navigate = useNavigate();\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentAnswer, setCurrentAnswer] = useState(null);\r\n  const [totalCorrect, setTotalCorrect] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    try {\r\n      if (!questionService) return;\r\n      const getData = async () => {\r\n        if (level) {\r\n          if (limit) {\r\n            const questions = await questionService(level, limit);\r\n            setQuestions(questions.data);\r\n          } else if (lesson) {\r\n            const questions = await questionService(level, lesson);\r\n            setQuestions(questions.data);\r\n          } else {\r\n            const questions = await questionService(level);\r\n            setQuestions(questions.data);\r\n          }\r\n        } else if (limit) {\r\n          const questions = await questionService(limit);\r\n          setQuestions(questions.data);\r\n        } else {\r\n          const questions = await questionService();\r\n          setQuestions(questions.data);\r\n        }\r\n        setLoading(false);\r\n      };\r\n      getData();\r\n    } catch (e) {\r\n      console.log(e);\r\n      setLoading(false);\r\n    }\r\n  }, [questionService, level, lesson, limit]);\r\n\r\n  const handleAnswer = (answer) => {\r\n    if (answers.length !== questionIndex) return;\r\n    if (answers.length === questionIndex) {\r\n      setCurrentAnswer(answer);\r\n      setAnswers([...answers, answer]);\r\n    }\r\n  };\r\n\r\n  const goNext = () => {\r\n    if (answers.length === questionIndex) {\r\n      setAnswers([...answers, null]);\r\n    }\r\n    setQuestionIndex((prev) => prev + 1);\r\n    if (currentAnswer === questions[questionIndex].answer)\r\n      setTotalCorrect((prev) => prev + 1);\r\n    setCurrentAnswer(null);\r\n  };\r\n\r\n  const handleReset = () => navigate(0);\r\n\r\n  useEffect(() => {\r\n    const handleKeyPress = (event) => {\r\n      if (event.key === \"a\") {\r\n        handleAnswer(questions[questionIndex].options[0]);\r\n      } else if (event.key === \"b\") {\r\n        handleAnswer(questions[questionIndex].options[1]);\r\n      } else if (event.key === \"c\") {\r\n        handleAnswer(questions[questionIndex].options[2]);\r\n      } else if (event.key === \"d\") {\r\n        handleAnswer(questions[questionIndex].options[3]);\r\n      }\r\n\r\n      // For \"Next\" on Enter\r\n      if (event.key === \"Enter\") {\r\n        goNext();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keypress\", handleKeyPress);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keypress\", handleKeyPress);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [questions, questionIndex, currentAnswer]);\r\n  return {\r\n    questions,\r\n    questionIndex,\r\n    handleAnswer,\r\n    goNext,\r\n    handleReset,\r\n    currentAnswer,\r\n    totalCorrect,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useQuiz;\r\n","import React from \"react\";\r\nimport useQuiz from \"../hooks/useQuiz\";\r\nimport Loader from \"../UI/Loader\";\r\nimport { AiOutlineReload } from \"react-icons/ai\";\r\n\r\nconst Quiz = ({ questionService, level, limit, lesson }) => {\r\n  const {\r\n    questions,\r\n    questionIndex,\r\n    handleAnswer,\r\n    goNext,\r\n    handleReset,\r\n    currentAnswer,\r\n    totalCorrect,\r\n    loading,\r\n  } = useQuiz(questionService, level, lesson, limit);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      <div className=\"question-container\">\r\n        {questionIndex < questions?.length && (\r\n          <>\r\n            <div className=\"question\">{questions[questionIndex].question}</div>\r\n            <div className=\"option-list\">\r\n              {questions[questionIndex]?.options?.map((option, index) => {\r\n                return (\r\n                  <div\r\n                    className={\r\n                      currentAnswer\r\n                        ? option === questions[questionIndex].answer\r\n                          ? \"option correct\"\r\n                          : option === currentAnswer\r\n                          ? \"option incorrect\"\r\n                          : \"option\"\r\n                        : \"option\"\r\n                    }\r\n                    onClick={() => {\r\n                      handleAnswer(option);\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    {option}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <button onClick={goNext} className=\"quiz-button\">\r\n              Next\r\n            </button>\r\n          </>\r\n        )}\r\n        <AiOutlineReload\r\n          size={20}\r\n          onClick={handleReset}\r\n          className=\"quiz-button\"\r\n        />\r\n        <div>Total Questions: {questions?.length}</div>\r\n        {questionIndex < questions?.length && (\r\n          <div>Current Question Number: {questionIndex + 1}</div>\r\n        )}\r\n        <div>Correct Questions: {totalCorrect}</div>\r\n        <div>\r\n          Incorrect Questions:&nbsp;\r\n          {questionIndex - totalCorrect > 0 ? questionIndex - totalCorrect : 0}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","export const lessonStart = {\r\n  n5: 1,\r\n  n4: 26,\r\n};\r\n"],"names":["_ref","_Array$from","type","level","chapter","setChapter","useState","_jsx","_Fragment","children","Quiz","questionService","quizService","getVocabularyMeaningToWord","getVocabularyWordToMeaning","lesson","_jsxs","Array","from","length","_","index","lessonStart","map","className","onClick","baseUrl","process","lettersUrl","particleUrl","vocabularyUrl","kanjiUrl","getLetters","async","url","limit","concat","axios","get","error","console","getParticles","getKanji","useQuiz","navigate","useNavigate","questionIndex","setQuestionIndex","questions","setQuestions","answers","setAnswers","currentAnswer","setCurrentAnswer","totalCorrect","setTotalCorrect","loading","setLoading","useEffect","getData","data","e","log","handleAnswer","answer","goNext","prev","handleKeyPress","event","key","options","window","addEventListener","removeEventListener","handleReset","_questions$questionIn","_questions$questionIn2","Loader","question","option","AiOutlineReload","size","n5","n4"],"sourceRoot":""}