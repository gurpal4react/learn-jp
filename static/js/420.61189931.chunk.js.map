{"version":3,"file":"static/js/420.61189931.chunk.js","mappings":"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","sources":["data/app/N5/KanjiBtns.js","Routes/N5/KanjiRoutes.js","Services/list.js","Services/quiz.js"],"sourcesContent":["export const KanjiBtns = [\r\n  { link: \"list\", icon: \"字\", text: \"Kanji List\" },\r\n  { link: \"quiz\", icon: \"字\", text: \"Kanji Quiz\" },\r\n];\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport { KanjiBtns } from \"../../data/app/N5/KanjiBtns\";\r\nimport Loader from \"../../components/UI/Loader\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport ErrorPage from \"../../components/UI/ErrorPage\";\r\nimport listService from \"../../Services/list\";\r\nimport quizService from \"../../Services/quiz\";\r\n\r\nconst LinkPage = lazy(() => import(\"../../Pages/LinkPage\"));\r\nconst ListComponent = lazy(() => import(\"../../components/UI/List\"));\r\nconst Quiz = lazy(() => import(\"../../components/UI/Quiz\"));\r\n\r\nconst KanjiRoutes = () => {\r\n  return (\r\n    <ErrorBoundary fallback={<ErrorPage />}>\r\n      <Suspense fallback={<Loader />}>\r\n        <Routes>\r\n          <Route index element={<LinkPage btnObj={KanjiBtns} />} />\r\n          <Route\r\n            path=\"/list\"\r\n            element={\r\n              <ListComponent\r\n                dataService={listService.getKanji}\r\n                level=\"n5\"\r\n                mainKey=\"kanji\"\r\n                heading=\"List of Kanji for N5\"\r\n                noShowKeys={[\"type\"]}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/quiz\"\r\n            element={<Quiz questionService={quizService.getKanji} level=\"n5\" />}\r\n          />\r\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default KanjiRoutes;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"list/\";\r\n\r\n// Letters\r\nconst hiraganaUrl = baseUrl + \"hiragana\";\r\nconst katakanaUrl = baseUrl + \"katakana\";\r\nconst katakanaReadingUrl = baseUrl + \"katakana-reading\";\r\n\r\n// Grammar\r\nconst adverbUrl = baseUrl + \"adverbs\";\r\nconst eAdjectiveUrl = baseUrl + \"e-adjective\";\r\nconst naAdjectiveUrl = baseUrl + \"na-adjective\";\r\nconst particleUrl = baseUrl + \"particles\";\r\n\r\n// Vocabulary\r\nconst vocabularyUrl = baseUrl + \"vocabulary\";\r\n\r\n// Kanji\r\nconst kanjiUrl = baseUrl + \"kanji\";\r\n\r\n// Common\r\nconst timeUrl = baseUrl + \"common/time\";\r\nconst countingUrl = baseUrl + \"common/counting\";\r\nconst directionsUrl = baseUrl + \"common/directions\";\r\n\r\n// Letters\r\nconst listService = {\r\n  getHiragana: async () => {\r\n    try {\r\n      const data = await axios.get(hiraganaUrl);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getKatakana: async () => {\r\n    try {\r\n      const data = await axios.get(katakanaUrl);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getKatakanaReading: async () => {\r\n    try {\r\n      const data = await axios.get(katakanaReadingUrl);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Grammar\r\n  getAdverbs: async (level) => {\r\n    try {\r\n      let url = adverbUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getEAdjective: async (level) => {\r\n    try {\r\n      let url = eAdjectiveUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getNaAdjective: async (level) => {\r\n    try {\r\n      let url = naAdjectiveUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getParticles: async (level) => {\r\n    try {\r\n      let url = particleUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Vocabulary\r\n  getVocabulary: async (level, lesson) => {\r\n    try {\r\n      let url = vocabularyUrl;\r\n      if (level) {\r\n        url += `?level=${level}`;\r\n        if (lesson) url += `&lesson=${lesson}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Kanji\r\n  getKanji: async (level) => {\r\n    try {\r\n      let url = kanjiUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Common\r\n  getTime: async (level) => {\r\n    try {\r\n      let url = timeUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getCounting: async (level) => {\r\n    try {\r\n      let url = countingUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getDirections: async (level) => {\r\n    try {\r\n      let url = directionsUrl;\r\n      if (level) url += `?level=${level}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n};\r\n\r\nexport default listService;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"quiz/\";\r\n\r\n// Letters\r\nconst lettersUrl = baseUrl + \"letters\";\r\n\r\n// Grammar\r\nconst particleUrl = baseUrl + \"particles\";\r\n\r\n// Vocabulary\r\nconst vocabularyUrl = baseUrl + \"vocabulary\";\r\n\r\n// Kanji\r\nconst kanjiUrl = baseUrl + \"kanji\";\r\n\r\n// Letters\r\nconst quizService = {\r\n  getLetters: async (limit) => {\r\n    try {\r\n      let url = lettersUrl;\r\n      if (limit) url += `?limit=${limit}`;\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Grammar\r\n  getParticles: async (level, limit) => {\r\n    try {\r\n      let url = particleUrl;\r\n      if (level) {\r\n        url += `?level=${level}`;\r\n        if (limit) url += `&limit=${limit}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Vocabulary\r\n  getVocabularyMeaningToWord: async (level, lesson) => {\r\n    try {\r\n      let url = vocabularyUrl;\r\n      if (level) {\r\n        url += `?level=${level}&quizType=mtw`;\r\n        if (lesson && lesson !== \"all\") url += `&lesson=${lesson}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n  getVocabularyWordToMeaning: async (level, lesson) => {\r\n    try {\r\n      let url = vocabularyUrl;\r\n      if (level) {\r\n        url += `?level=${level}&quizType=wtm`;\r\n        if (lesson && lesson !== \"all\") url += `&lesson=${lesson}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  getKanji: async (level, limit) => {\r\n    try {\r\n      let url = kanjiUrl;\r\n      if (level) {\r\n        url += `?level=${level}`;\r\n        if (limit) url += `&limit=${limit}`;\r\n      }\r\n      const data = await axios.get(url);\r\n      return data;\r\n    } catch (error) {\r\n      console.error({ error });\r\n      return [];\r\n    }\r\n  },\r\n};\r\n\r\nexport default quizService;\r\n"],"names":["KanjiBtns","link","icon","text","LinkPage","lazy","ListComponent","Quiz","KanjiRoutes","_jsx","ErrorBoundary","fallback","ErrorPage","children","Suspense","Loader","_jsxs","Routes","Route","index","element","btnObj","path","dataService","listService","getKanji","level","mainKey","heading","noShowKeys","questionService","quizService","Navigate","to","baseUrl","process","hiraganaUrl","katakanaUrl","katakanaReadingUrl","adverbUrl","eAdjectiveUrl","naAdjectiveUrl","particleUrl","vocabularyUrl","kanjiUrl","timeUrl","countingUrl","directionsUrl","getHiragana","async","axios","get","error","console","getKatakana","getKatakanaReading","getAdverbs","url","concat","getEAdjective","getNaAdjective","getParticles","getVocabulary","lesson","getTime","getCounting","getDirections","lettersUrl","getLetters","limit","getVocabularyMeaningToWord","getVocabularyWordToMeaning"],"sourceRoot":""}